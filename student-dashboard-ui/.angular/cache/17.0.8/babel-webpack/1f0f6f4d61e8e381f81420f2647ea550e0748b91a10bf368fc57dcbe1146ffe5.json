{"ast":null,"code":"import { EMPTY, of } from 'rxjs';\n/**\n *\n * Helper function for checking if we have data in cache\n *\n * export class ProductsService {\n *   constructor(private productsStore: ProductsStore) {}\n\n *   get(): Observable<void> {\n *     const request = this.http.get().pipe(\n *       tap(this.productsStore.set(response))\n *     );\n *\n *     return cacheable(this.productsStore, request);\n *   }\n * }\n */\nexport function cacheable(store, request$, options = {\n  emitNext: false\n}) {\n  if (store._cache().value) {\n    return options.emitNext ? of(undefined) : EMPTY;\n  }\n  return request$;\n}\n//# sourceMappingURL=cacheable.js.map","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}