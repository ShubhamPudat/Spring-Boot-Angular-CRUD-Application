{"ast":null,"code":"import { hasEntity } from './hasEntity';\n// @internal\nexport function addEntities({\n  state,\n  entities,\n  idKey,\n  options = {},\n  preAddEntity\n}) {\n  let newEntities = {};\n  let newIds = [];\n  let hasNewEntities = false;\n  for (const entity of entities) {\n    if (hasEntity(state.entities, entity[idKey]) === false) {\n      // evaluate the middleware first to support dynamic ids\n      const current = preAddEntity(entity);\n      const entityId = current[idKey];\n      newEntities[entityId] = current;\n      if (options.prepend) newIds.unshift(entityId);else newIds.push(entityId);\n      hasNewEntities = true;\n    }\n  }\n  return hasNewEntities ? {\n    newState: {\n      ...state,\n      entities: {\n        ...state.entities,\n        ...newEntities\n      },\n      ids: options.prepend ? [...newIds, ...state.ids] : [...state.ids, ...newIds]\n    },\n    newIds\n  } : null;\n}\n//# sourceMappingURL=addEntities.js.map","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}