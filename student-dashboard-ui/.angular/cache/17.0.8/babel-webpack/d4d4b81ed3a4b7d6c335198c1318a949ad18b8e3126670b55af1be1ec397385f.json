{"ast":null,"code":"export { action, currentAction, logAction, resetCustomAction, setAction, setSkipAction } from './actions';\nexport { getExitingActives, hasActiveState, isMultiActiveState, resolveActiveEntity } from './activeState';\nexport { addEntities } from './addEntities';\nexport { arrayAdd } from './arrayAdd';\nexport { arrayFind, distinctUntilArrayItemChanged, find } from './arrayFind';\nexport { arrayRemove } from './arrayRemove';\nexport { arrayToggle, byId, byKey } from './arrayToggle';\nexport { arrayUpdate } from './arrayUpdate';\nexport { arrayUpsert } from './arrayUpsert';\nexport { cacheable } from './cacheable';\nexport { coerceArray } from './coerceArray';\nexport { combineQueries } from './combineQueries';\nexport { akitaConfig, getAkitaConfig } from './config';\nexport { DEFAULT_ID_KEY } from './defaultIDKey';\nexport { akitaDevtools } from './devtools';\nexport * from './dispatchers';\nexport { entitiesToArray } from './entitiesToArray';\nexport { entitiesToMap } from './entitiesToMap';\nexport * from './entityActions';\nexport { EntityService } from './entityService';\nexport { EntityStore, EntityUIStore } from './entityStore';\nexport { enableAkitaProdMode, isDev, __DEV__ } from './env';\nexport { filterNil, filterNilValue } from './filterNil';\nexport { createEntityQuery, createEntityStore, createQuery, createStore } from './fp';\nexport { getActiveEntities } from './getActiveEntities';\nexport { getInitialEntitiesState } from './getInitialEntitiesState';\nexport { getValue } from './getValueByString';\nexport { guid } from './guid';\nexport { hasEntity } from './hasEntity';\nexport { isArray } from './isArray';\nexport { isDefined } from './isDefined';\nexport { isEmpty } from './isEmpty';\nexport { isFunction } from './isFunction';\nexport { isNil } from './isNil';\nexport { isNumber } from './isNumber';\nexport { isObject } from './isObject';\nexport { isPlainObject } from './isPlainObject';\nexport { isString } from './isString';\nexport { isUndefined } from './isUndefined';\nexport { persistState, selectPersistStateInit } from './persistState';\nexport { dirtyCheckDefaultParams, DirtyCheckPlugin, getNestedPath } from './plugins/dirtyCheck/dirtyCheckPlugin';\nexport { EntityDirtyCheckPlugin } from './plugins/dirtyCheck/entityDirtyCheckPlugin';\nexport { EntityCollectionPlugin } from './plugins/entityCollectionPlugin';\nexport { Paginator, PaginatorPlugin } from './plugins/paginator/paginatorPlugin';\nexport { PersistNgFormPlugin } from './plugins/persistForm/persistNgFormPlugin';\nexport { AkitaPlugin } from './plugins/plugin';\nexport { EntityStateHistoryPlugin } from './plugins/stateHistory/entityStateHistoryPlugin';\nexport { StateHistoryPlugin } from './plugins/stateHistory/stateHistoryPlugin';\nexport { Query } from './query';\nexport { QueryConfig, queryConfigKey } from './queryConfig';\nexport { EntityUIQuery, QueryEntity } from './queryEntity';\nexport { removeAllEntities, removeEntities } from './removeEntities';\nexport { resetStores } from './resetStores';\nexport { isNotBrowser } from './root';\nexport { EntityStoreAction, getEntityStore, getEntityStoreByName, getStore, getStoreByName, runEntityStoreAction, runStoreAction, StoreAction } from './runStoreAction';\nexport { isEntityState, setEntities } from './setEntities';\nexport { setLoading } from './setLoading';\nexport { setLoadingAndError } from './setLoadingAndError';\nexport { setValue } from './setValueByString';\nexport { SnapshotManager, snapshotManager } from './snapshotManager';\nexport { compareValues, Order } from './sort';\nexport { sortByOptions } from './sortByOptions';\nexport { Store } from './store';\nexport { configKey, StoreConfig } from './storeConfig';\nexport { __stores__ } from './stores';\nexport { toBoolean } from './toBoolean';\nexport { toEntitiesIds } from './toEntitiesIds';\nexport { toEntitiesObject } from './toEntitiesObject';\nexport { trackIdChanges } from './trackIdChanges';\nexport { applyTransaction, commit, endBatch, isTransactionInProcess, startBatch, transaction, transactionManager, withTransaction } from './transaction';\nexport * from './types';\nexport { updateEntities } from './updateEntities';\n//# sourceMappingURL=index.js.map","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}