{"ast":null,"code":"import { isNil } from './isNil';\nimport { hasActiveState, isMultiActiveState, resolveActiveEntity } from './activeState';\n// @internal\nexport function removeEntities({\n  state,\n  ids\n}) {\n  if (isNil(ids)) return removeAllEntities(state);\n  const entities = state.entities;\n  let newEntities = {};\n  for (const id of state.ids) {\n    if (ids.includes(id) === false) {\n      newEntities[id] = entities[id];\n    }\n  }\n  const newState = {\n    ...state,\n    entities: newEntities,\n    ids: state.ids.filter(current => ids.includes(current) === false)\n  };\n  if (hasActiveState(state)) {\n    newState.active = resolveActiveEntity(newState);\n  }\n  return newState;\n}\n// @internal\nexport function removeAllEntities(state) {\n  return {\n    ...state,\n    entities: {},\n    ids: [],\n    active: isMultiActiveState(state.active) ? [] : null\n  };\n}\n//# sourceMappingURL=removeEntities.js.map","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}