{"ast":null,"code":"import { DEFAULT_ID_KEY } from './defaultIDKey';\nimport { coerceArray } from './coerceArray';\nimport { isObject } from './isObject';\nimport { isFunction } from './isFunction';\nimport { not } from './not';\n/**\n * Remove item from collection\n *\n * @example\n *\n *\n * store.update(state => ({\n *   names: arrayRemove(state.names, ['one', 'second'])\n * }))\n */\nexport function arrayRemove(arr, identifier, idKey = DEFAULT_ID_KEY) {\n  let identifiers;\n  let filterFn;\n  if (isFunction(identifier)) {\n    filterFn = not(identifier);\n  } else {\n    identifiers = coerceArray(identifier);\n    filterFn = current => {\n      return identifiers.includes(isObject(current) ? current[idKey] : current) === false;\n    };\n  }\n  if (Array.isArray(arr)) {\n    return arr.filter(filterFn);\n  }\n}\n//# sourceMappingURL=arrayRemove.js.map","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}