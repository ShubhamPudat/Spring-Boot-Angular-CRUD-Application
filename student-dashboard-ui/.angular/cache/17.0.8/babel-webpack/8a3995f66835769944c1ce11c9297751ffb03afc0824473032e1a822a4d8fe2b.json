{"ast":null,"code":"import { isNil } from './isNil';\nimport { coerceArray } from './coerceArray';\n// @internal\nexport function entitiesToMap(state, options) {\n  const map = {};\n  const {\n    filterBy,\n    limitTo\n  } = options;\n  const {\n    ids,\n    entities\n  } = state;\n  if (!filterBy && !limitTo) {\n    return entities;\n  }\n  const hasLimit = isNil(limitTo) === false;\n  if (filterBy && hasLimit) {\n    let count = 0;\n    for (let i = 0, length = ids.length; i < length; i++) {\n      if (count === limitTo) break;\n      const id = ids[i];\n      const entity = entities[id];\n      const allPass = coerceArray(filterBy).every(fn => fn(entity, i));\n      if (allPass) {\n        map[id] = entity;\n        count++;\n      }\n    }\n  } else {\n    const finalLength = Math.min(limitTo || ids.length, ids.length);\n    for (let i = 0; i < finalLength; i++) {\n      const id = ids[i];\n      const entity = entities[id];\n      if (!filterBy) {\n        map[id] = entity;\n        continue;\n      }\n      const allPass = coerceArray(filterBy).every(fn => fn(entity, i));\n      if (allPass) {\n        map[id] = entity;\n      }\n    }\n  }\n  return map;\n}\n//# sourceMappingURL=entitiesToMap.js.map","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}