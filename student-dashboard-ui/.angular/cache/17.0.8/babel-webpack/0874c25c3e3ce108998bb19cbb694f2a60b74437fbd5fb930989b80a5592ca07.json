{"ast":null,"code":"/**\n * Create an array value comparator for a specific key of the value.\n * @param prop The property of the value to be compared.\n */\nexport function byKey(prop) {\n  return (a, b) => a[prop] === b[prop];\n}\n/**\n * Create an array value comparator for the id field of an array value.\n */\nexport function byId() {\n  return byKey('id');\n}\n/**\n * Adds or removes a value from an array by comparing its values. If a matching value exists it is removed, otherwise\n * it is added to the array.\n *\n * @param array The array to modify.\n * @param newValue The new value to toggle.\n * @param compare A compare function to determine equality of array values. Default is an equality test by object identity.\n */\nexport function arrayToggle(array, newValue, compare = (a, b) => a === b) {\n  const index = array.findIndex(oldValue => compare(newValue, oldValue));\n  return !!~index ? [...array.slice(0, index), ...array.slice(index + 1)] : [...array, newValue];\n}\n//# sourceMappingURL=arrayToggle.js.map","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}